package com.itheima.joe.test;

/*
多态时
成员的特点：
1.成员变量（面试可能会出现）注意成员变量没有覆盖或者重写的说法
    编译时：参考引用型变量所属类中是否有调用成员变量，如果所属类中有该成员变量，编译通过，否则编译失败
    运行时：参考引用型变量所属类中是否有调用成员变量，并运行该所属类中的成员变量。
    简单说  Animal a = new Dog();（向上转型） a如果想调用成员变量，如果有，则编译通过并运行自己的成员变量，不会运行子类的同名变量
            编译和运行都参考等号的左边
2.成员函数（非静态）
 编译时：参考引用型变量所属的类中是否调用的函数。 类中有该函数，则编译通过，没有则编译失败
 运行时：参考的是对象所属类中是否有调用的函数，如果有则调用（重写）
 简单说：编译看左边，运行看右边

3.静态函数
    编译时：参考引用型变量所属类中是否有调用的静态方法，如果有，则编译通过，否则编译失败
    运行时：参考引用型变量所属类中是否有调用的静态方法，如果有，则运行通过，否则运行失败
    简单说：编译和运行都看左边

    其实对于静态方法，是不需要对象的，直接用类名调用即可
 */
public class Fu {
    public Fu show() {
        System.out.println("fu show");
        return new Fu();
    }

    public static void method() {
        System.out.println("fu static method");
    }
}
